name: Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  update-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version info
        id: version
        run: |
          VERSION="${{ github.event.release.tag_name }}"

          # Ensure version starts with 'v'
          if [[ ! "$VERSION" =~ ^v ]]; then
            VERSION="v$VERSION"
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

          # Extract major version for tagging
          MAJOR_VERSION=$(echo "$VERSION" | grep -oE '^v[0-9]+')
          echo "major_version=$MAJOR_VERSION" >> $GITHUB_OUTPUT

          echo "Released version: $VERSION"
          echo "Major version tag: $MAJOR_VERSION"

      - name: Update major version tag
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

          # Force update the major version tag to point to the release tag
          git tag -f ${{ steps.version.outputs.major_version }} ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.major_version }} --force

          echo "âœ… Updated ${{ steps.version.outputs.major_version }} tag to point to ${{ steps.version.outputs.version }}"

  update-readme:
    runs-on: ubuntu-latest
    steps:

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.TEMPORAL_CICD_APP_ID }}
          private-key: ${{ secrets.TEMPORAL_CICD_PRIVATE_KEY }}

      - name: Checkout ui-server
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          echo ${{ steps.generate_token.outputs.token }} | gh auth login --with-token
          gh auth status -a
          git config --global user.name "temporal-cicd[bot]"
          git config --global user.email "gh-action@users.noreply.github.com"

      - name: Extract version info
        id: version
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          MAJOR_VERSION=$(echo "$VERSION" | grep -oE '^v[0-9]+')
          echo "major_version=$MAJOR_VERSION" >> $GITHUB_OUTPUT

      - name: Update README examples
        run: |
          # Only update pack-dependency-actions version references, not external actions
          sed -i "s|\(pack-dependency-actions/[^@]*\)@v[0-9]\+|\1@${{ steps.version.outputs.major_version }}|g" README.md

          # Check if changes were made
          if git diff --quiet; then
            echo "No changes needed in README"
          else
            git config user.name github-actions[bot]
            git config user.email github-actions[bot]@users.noreply.github.com
            git add README.md
            git commit -m "docs: update README examples to ${{ steps.version.outputs.major_version }}"
            git push
            echo "âœ… Updated README examples to use ${{ steps.version.outputs.major_version }}"
          fi

  notify-release:
    runs-on: ubuntu-latest
    if: always()
    needs: [update-tags, update-readme]
    steps:
      - name: Update release description
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ github.event.release.tag_name }}';
            const majorVersion = version.match(/^v\d+/)[0];
            const releaseId = '${{ github.event.release.id }}';
            
            // Get current release body
            const { data: release } = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId
            });

            const summary = [
              `## ðŸŽ‰ Release ${version} Published!`,
              '',
              '### âœ… Post-release tasks completed:',
              `- Updated ${majorVersion} tag to point to ${version}`,
              `- Updated README examples to use ${majorVersion}`,
              '',
              '### ðŸ“¦ Actions available at:',
              `- \`${{ github.repository }}/check-version@${majorVersion}\``,
              `- \`${{ github.repository }}/validate-sha@${majorVersion}\``,
              `- \`${{ github.repository }}/download-source@${majorVersion}\``,
              `- \`${{ github.repository }}/build-and-pack@${majorVersion}\``,
              `- \`${{ github.repository }}/move-pack@${majorVersion}\``,
              `- \`${{ github.repository }}/update-dependencies@${majorVersion}\``,
              `- \`${{ github.repository }}/generate-changelog@${majorVersion}\``,
              `- \`${{ github.repository }}/dispatch-workflow@${majorVersion}\``,
              `- \`${{ github.repository }}/auto-delete@${majorVersion}\``,
              '',
              '### ðŸ“– Usage:',
              'Users can now reference this release using either:',
              `- Full version: \`@${version}\``,
              `- Major version: \`@${majorVersion}\` (recommended for automatic updates)`,
              '',
              '---',
              '',
              release.body || ''
            ].join('\n');

            // Update the release with the summary
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body: summary
            });
            
            console.log(`âœ… Updated release description for ${version}`);

name: 'Dispatch Workflow'
description: 'Dispatch a workflow in a remote repository'
author: 'Temporal'

inputs:
  token:
    description: 'GitHub token with repo and workflow permissions for target repository'
    required: true
  repository:
    description: 'Target repository in owner/name format'
    required: true
  workflow:
    description: 'Workflow file name (e.g., update-dependencies.yml) or workflow ID'
    required: true
  ref:
    description: 'Git reference (branch, tag, or SHA) to run the workflow on'
    required: false
    default: 'main'
  inputs:
    description: 'JSON string of inputs to pass to the workflow'
    required: false
    default: '{}'
  add-commit-comment:
    description: 'Add a comment to the commit on push events'
    required: false
    default: 'false'
  commit-comment-template:
    description: 'Template for commit comment. Available variables: {repository}, {workflow}, {ref}'
    required: false
    default: '🚀 Triggered workflow `{workflow}` in {repository} on {ref}'
  log-output:
    description: 'Log the workflow dispatch result'
    required: false
    default: 'true'
  log-title:
    description: 'Title for the log output'
    required: false
    default: 'Workflow Dispatch'

outputs:
  dispatched:
    description: 'Whether the workflow was successfully dispatched'
    value: ${{ steps.dispatch.outputs.dispatched }}

runs:
  using: 'composite'
  steps:
    - name: Dispatch workflow
      id: dispatch
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        WORKFLOW_NAME: ${{ inputs.workflow }}
        REPOSITORY: ${{ inputs.repository }}
        REF: ${{ inputs.ref }}
        INPUTS_JSON: ${{ inputs.inputs }}
      run: |
        echo "Dispatching workflow '$WORKFLOW_NAME' in $REPOSITORY..."

        # Use GitHub API directly for workflow dispatch
        # Note: --input expects the raw JSON to be passed, not -f which treats it as a string
        response=$(gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/$REPOSITORY/actions/workflows/$WORKFLOW_NAME/dispatches \
          --input - <<< "{\"ref\": \"$REF\", \"inputs\": $INPUTS_JSON}" 2>&1) || dispatch_failed=true

        # Check if dispatch was successful (API returns 204 No Content on success)
        if [ -z "$response" ] || [[ "$response" == "" ]]; then
          echo "✅ Workflow dispatch request sent successfully"
          echo "dispatched=true" >> $GITHUB_OUTPUT
        else
          echo "Response: $response"
          # Check if it's an error
          if [ "$dispatch_failed" = "true" ] || echo "$response" | grep -q "error\|Error\|failed\|Failed"; then
            echo "::error::Failed to dispatch workflow"
            echo "dispatched=false" >> $GITHUB_OUTPUT
            exit 1
          else
            # Sometimes there's output but it's not an error
            echo "✅ Workflow dispatch request sent"
            echo "dispatched=true" >> $GITHUB_OUTPUT
          fi
        fi

    - name: Log workflow dispatch
      if: inputs.log-output == 'true' && always()
      shell: bash
      env:
        LOG_TITLE: ${{ inputs.log-title }}
        DISPATCHED: ${{ steps.dispatch.outputs.dispatched }}
        REPOSITORY: ${{ inputs.repository }}
        WORKFLOW_NAME: ${{ inputs.workflow }}
        REF: ${{ inputs.ref }}
        INPUTS_JSON: ${{ inputs.inputs }}
      run: |
        echo "## $LOG_TITLE"
        echo ""
        if [ "$DISPATCHED" == "true" ]; then
          echo "✅ Successfully dispatched workflow"
          echo "- **Repository:** $REPOSITORY"
          echo "- **Workflow:** $WORKFLOW_NAME"
          echo "- **Reference:** $REF"
          if [ "$INPUTS_JSON" != '{}' ] && [ -n "$INPUTS_JSON" ]; then
            echo "- **Inputs:** \`$INPUTS_JSON\`"
          fi
        else
          echo "❌ Failed to dispatch workflow"
          echo "- **Repository:** $REPOSITORY"
          echo "- **Workflow:** $WORKFLOW_NAME"
        fi

    - name: Add comment to commit
      if: github.event_name == 'push' && steps.dispatch.outputs.dispatched == 'true' && inputs.add-commit-comment == 'true'
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        REPOSITORY: ${{ inputs.repository }}
        WORKFLOW_NAME: ${{ inputs.workflow }}
        REF: ${{ inputs.ref }}
        COMMENT_TEMPLATE: ${{ inputs.commit-comment-template }}
      run: |
        # Create comment body with template substitution
        # Use a heredoc to avoid issues with special characters and backticks
        echo "$COMMENT_TEMPLATE" > /tmp/comment_template.txt

        # Replace template variables using sed
        sed -i "s|{repository}|$REPOSITORY|g" /tmp/comment_template.txt
        sed -i "s|{workflow}|$WORKFLOW_NAME|g" /tmp/comment_template.txt
        sed -i "s|{ref}|$REF|g" /tmp/comment_template.txt

        # Read the processed comment
        COMMENT=$(cat /tmp/comment_template.txt)

        # Create a comment on the commit
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/commits/${{ github.sha }}/comments \
          -f body="$COMMENT"

name: 'Download Source'
description: 'Download and extract source code from GitHub'

inputs:
  repository:
    description: 'Repository (owner/name)'
    required: true
  sha:
    description: 'Commit SHA to download'
    required: true
  path:
    description: 'Path to extract source'
    required: false
    default: 'source'
  token:
    description: 'GitHub token for private repos'
    required: false

outputs:
  source-path:
    description: 'Path to extracted source'
    value: ${{ steps.download.outputs.source-path }}

runs:
  using: composite
  steps:
    - name: Download and extract source
      id: download
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token || github.token }}
      run: |
        REPOSITORY="${{ inputs.repository }}"
        SHA="${{ inputs.sha }}"
        PATH_PREFIX="${{ inputs.path }}"

        echo "Downloading $REPOSITORY@$SHA..."

        # Use API for private repos, direct URL for public
          curl -L \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPOSITORY/tarball/$SHA" \
            -o source.tar.gz
        else
          curl -L "https://github.com/$REPOSITORY/archive/$SHA.tar.gz" -o source.tar.gz
        fi

        # Extract
        tar -xzf source.tar.gz

        # Find extracted directory (GitHub creates with prefix)
        SOURCE_DIR=$(ls -d */ | grep -E "^[^/]+-[^/]+-[0-9a-f]+/" | head -n 1 | sed 's|/$||')

        if [ -z "$SOURCE_DIR" ]; then
          echo "Error: Could not find extracted source directory"
          ls -la
          exit 1
        fi

        # Rename to requested path
        mv "$SOURCE_DIR" "$PATH_PREFIX"
        rm source.tar.gz

        echo "Source extracted to: $PATH_PREFIX"
        echo "source-path=$PATH_PREFIX" >> $GITHUB_OUTPUT

name: 'Create Dependency Update PR'
description: 'Creates a pull request for dependency updates using templates'
inputs:
  repository:
    description: 'Repository name for PR title/body templates'
    required: false
  short-sha:
    description: 'Short SHA for PR title/body templates'
    required: false
  full-sha:
    description: 'Full SHA for PR title/body templates'
    required: false
  changelog:
    description: 'Changelog for PR body'
    required: false
  mode:
    description: 'PR mode (test or release)'
    required: false
    default: 'test'
  pr-title-template:
    description: 'Template for PR title'
    required: false
    default: 'Update {repository} to {short_sha}'
  pr-body-template:
    description: 'Template for PR body'
    required: false
    default: |
      ## Updates {repository} to {short_sha}
      
      Full SHA: {full_sha}
      
      ### Changelog
      {changelog}
  labels:
    description: 'Comma-separated list of labels'
    required: false
    default: ''
  draft:
    description: 'Create as draft PR (true/false/always-true)'
    required: false
    default: 'false'
  token:
    description: 'GitHub token for creating the PR'
    required: true
  commit-message:
    description: 'Commit message'
    required: false
    default: 'Update dependencies'
  branch-prefix:
    description: 'Branch name prefix'
    required: false
    default: 'update'
outputs:
  pull-request-number:
    description: 'The pull request number'
    value: ${{ steps.create-pr.outputs.pull-request-number }}
  pull-request-url:
    description: 'The pull request URL'
    value: ${{ steps.create-pr.outputs.pull-request-url }}
  pull-request-operation:
    description: 'The pull request operation (created, updated, closed)'
    value: ${{ steps.create-pr.outputs.pull-request-operation }}

runs:
  using: 'composite'
  steps:
    - name: Prepare PR variables
      id: prepare
      shell: bash
      run: |
        # Get inputs
        REPOSITORY="${{ inputs.repository }}"
        SHORT_SHA="${{ inputs.short-sha }}"
        FULL_SHA="${{ inputs.full-sha }}"
        CHANGELOG="${{ inputs.changelog }}"
        MODE="${{ inputs.mode }}"
        BRANCH_PREFIX="${{ inputs.branch-prefix }}"
        
        # Generate branch name
        if [ -z "$REPOSITORY" ]; then
          REPO_NAME="deps"
        else
          REPO_NAME=$(echo "$REPOSITORY" | cut -d'/' -f2)
        fi
        
        if [ -z "$SHORT_SHA" ]; then
          SHORT_SHA=$(date +%Y%m%d)
        fi
        
        BRANCH="${BRANCH_PREFIX}-${REPO_NAME}-${SHORT_SHA}"
        BRANCH=$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g')
        
        echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        
        # Prepare title
        TITLE="${{ inputs.pr-title-template }}"
        TITLE="${TITLE//\{repository\}/${REPOSITORY:-dependencies}}"
        TITLE="${TITLE//\{short_sha\}/${SHORT_SHA:-latest}}"
        TITLE="${TITLE//\{full_sha\}/${FULL_SHA}}"
        TITLE="${TITLE//\{mode\}/${MODE}}"
        
        echo "title=$TITLE" >> $GITHUB_OUTPUT
        
        # Prepare body
        BODY="${{ inputs.pr-body-template }}"
        BODY="${BODY//\{repository\}/${REPOSITORY:-dependencies}}"
        BODY="${BODY//\{short_sha\}/${SHORT_SHA:-latest}}"
        BODY="${BODY//\{full_sha\}/${FULL_SHA}}"
        BODY="${BODY//\{changelog\}/${CHANGELOG:-No changes}}"
        BODY="${BODY//\{mode\}/${MODE}}"
        
        # Escape for GitHub output
        BODY="${BODY//'%'/'%25'}"
        BODY="${BODY//$'\n'/'%0A'}"
        BODY="${BODY//$'\r'/'%0D'}"
        
        echo "body=$BODY" >> $GITHUB_OUTPUT
        
        # Handle draft setting
        DRAFT="${{ inputs.draft }}"
        if [ "$DRAFT" = "always-true" ]; then
          DRAFT="true"
        fi
        echo "draft=$DRAFT" >> $GITHUB_OUTPUT

    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        commit-message: ${{ inputs.commit-message }}
        title: ${{ steps.prepare.outputs.title }}
        body: ${{ steps.prepare.outputs.body }}
        branch: ${{ steps.prepare.outputs.branch }}
        labels: ${{ inputs.labels }}
        draft: ${{ steps.prepare.outputs.draft }}